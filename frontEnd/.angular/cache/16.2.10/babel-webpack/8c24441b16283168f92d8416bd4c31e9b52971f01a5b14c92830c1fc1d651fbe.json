{"ast":null,"code":"import { environment } from 'src/environment.ts/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  getEmployees() {\n    return this.http.get(`${this.apiServerUrl}/employee/all`);\n  }\n  addEmployees(employee) {\n    return this.http.post(`${this.apiServerUrl}/employee/add`, employee);\n  }\n  updateEmployees(employee) {\n    return this.http.put(`${this.apiServerUrl}/employee/update`, employee);\n  }\n  deleteEmployees(employeeId) {\n    return this.http.delete(`${this.apiServerUrl}/employee/delete/${employeeId}`);\n  }\n  static #_ = this.ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","EmployeeService","constructor","http","apiServerUrl","apiBaseUrl","getEmployees","get","addEmployees","employee","post","updateEmployees","put","deleteEmployees","employeeId","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/ismail/Desktop/java/Projects/EmployeemanagerProject/frontEnd/src/app/employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\nimport { environment } from 'src/environment.ts/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  private apiServerUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient) {}\n  public getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${this.apiServerUrl}/employee/all`);\n  }\n\n  public addEmployees(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(\n      `${this.apiServerUrl}/employee/add`,\n      employee\n    );\n  }\n\n  public updateEmployees(employee: Employee): Observable<Employee> {\n    return this.http.put<Employee>(\n      `${this.apiServerUrl}/employee/update`,\n      employee\n    );\n  }\n\n  public deleteEmployees(employeeId: number): Observable<void> {\n    return this.http.delete<void>(\n      `${this.apiServerUrl}/employee/delete/${employeeId}`\n    );\n  }\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,YAAY,GAAGJ,WAAW,CAACK,UAAU;EAEN;EAChCC,YAAYA,CAAA;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,YAAY,eAAe,CAAC;EACvE;EAEOI,YAAYA,CAACC,QAAkB;IACpC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CACnB,GAAG,IAAI,CAACN,YAAY,eAAe,EACnCK,QAAQ,CACT;EACH;EAEOE,eAAeA,CAACF,QAAkB;IACvC,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAClB,GAAG,IAAI,CAACR,YAAY,kBAAkB,EACtCK,QAAQ,CACT;EACH;EAEOI,eAAeA,CAACC,UAAkB;IACvC,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CACrB,GAAG,IAAI,CAACX,YAAY,oBAAoBU,UAAU,EAAE,CACrD;EACH;EAAC,QAAAE,CAAA,G;qBA1BUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}